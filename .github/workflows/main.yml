name: Build and Test
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15,  ubuntu-20.04]
        ccompiler: [clang, gcc-9, gcc-10]
        fcompiler: [gfortran-9, gfortran-10]
        exclude:
          - os: ubuntu-20.04
            ccompiler: clang
          - ccompiler: gcc-9
            fcompiler: gfortran-10
          - ccompiler: gcc-10
            fcompiler: gfortran-9

    steps:

    - name: install-deps
      run: |
        if [[ ${{ matrix.os }} == "ubuntu-20.04" ]]; then
          sudo apt-get update
          sudo apt-get install doxygen
          sudo apt-get install python3-pip python3-dev python3-numpy
          sudo python3 -m pip install -U pip setuptools
          sudo python3 -m pip install -U numpy
          sudo python3 -m pip install -U netCDF4
          sudo python3 -m pip install -U pdoc
        elif [[ ${{ matrix.os }} == "macos-10.15" ]]; then
          brew update
          brew install doxygen
          pip3 install setuptools
          pip3 install numpy
          pip3 install netCDF4
          if [[ ${{ matrix.fcompiler }} == "gfortran-9" ]]; then
            sudo ln -sf /usr/local/bin/gfortran-9 /usr/local/bin/gfortran
          elif  [[ ${{ matrix.fcompiler }} == "gfortran-10" ]]; then
            sudo ln -sf /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
          fi
        fi

    - name: checkout
      uses: actions/checkout@v2
      with:
        path: bufr
        submodules: true

    - name: build
      run: |
        if [[ ${{ matrix.ccompiler }} == "clang" ]]; then
          export CC=clang
        elif [[ ${{ matrix.ccompiler }} == "gcc-9" ]]; then
          export CC=gcc-9
        elif [[ ${{ matrix.ccompiler }} == "gcc-10" ]]; then
          export CC=gcc-10
        fi
        if [[ ${{ matrix.fcompiler }} == "gfortran-9" ]]; then
          export FC=gfortran-9
        elif [[ ${{ matrix.fcompiler }} == "gfortran-10" ]]; then
          export FC=gfortran-10
        fi
        cd bufr
        mkdir build
        cd build
        pybufr_dir=`pwd`/install/lib/python3.8/site-packages/py_ncepbufr-11.6.0-py3.8-linux-x86_64.egg
        export PYTHONPATH="${PYTHONPATH}:${pybufr_dir}"
        ls `pwd`/install/lib/python3.8/site-packages/
        cmake -DCMAKE_INSTALL_PREFIX=./install -DENABLE_PYTHON=ON ..
        make -j2
        make install

    - name: test
      run: |
        cd $GITHUB_WORKSPACE/bufr/build
        ctest --output-on-failure
